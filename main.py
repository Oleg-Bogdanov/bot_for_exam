import telebot
import time
import schedule
from telebot import types
from examiner_database import create_database, add_user, update, select_num_from_database, statistics
from threading import Thread
from creds import get_bot_token
from examiner_database import *

bot = telebot.TeleBot(get_bot_token())
create_database()

def create_inline_buttons(dictionary):
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    for key, value in dictionary.items():
        callback_button = types.InlineKeyboardButton(text=key, callback_data=value)
        keyboard.add(callback_button)

    return keyboard


@bot.message_handler(commands=['start'])
def start_dialog(message):
    user_id = message.from_user.id
    try:
        bot.send_message(user_id, '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –û–ì–≠ –∏ –ï–ì–≠. '
                                  '–í—ã–±–µ—Ä–∏, –∫ —á–µ–º—É —Ç—ã –≥–æ—Ç–æ–≤–∏—à—å—Å—è, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏',
                                  reply_markup=create_inline_buttons({'–ì–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–ì–≠': 'oge',
                                                                      '–ì–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ì–≠': 'ege'}))
        # –≤ key –ø–∏—à–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –∞ –∫ value callback_data
    except Exception as e:
        bot.send_message(user_id, f'{e}')


def send_task():
    user_id = 1439318759    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π
    bot.send_message(user_id, '–ü–æ—Ä–∞ –ø–æ—Ä–µ—à–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è',
                     reply_markup=create_inline_buttons({'–ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µüìñ': 'get_task'}))

def schedule_runner():    # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    while True:    # –£–∂–µ –∑–Ω–∞–∫–æ–º—ã–π —Ç–µ–±–µ —Ü–∏–∫–ª
        schedule.run_pending()
        time.sleep(1)


schedule.every().day.at("15:00").do(send_task)    # say_hello –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 15:00
Thread(target=schedule_runner).start()

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    user_id = call.message.chat.id
    subject_list = ['rus', 'math', 'inf', 'demos']

    if call.data == 'oge' or call.data == 'ege':
        user_exam = call.message.text    # —ç—Ç–æ —Ç–µ–∫—Å—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
        print("user_exam:", user_exam)
        add_user(user_id)
        update("level", user_exam, user_id)
        # —Å–æ—Ö—Ä–∞–Ω–∏ user_exam –≤ –±–¥ ...
        bot.edit_message_text(chat_id=user_id, message_id=call.message.id,
                              text="–¢—ã –≤—ã–±—Ä–∞–ª —ç–∫–∑–∞–º–µ–Ω, —á—Ç–æ–±—ã –µ–≥–æ –ø–æ–º–µ–Ω—è—Ç—å –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /new_exam")
        bot.send_message(chat_id=user_id, text='–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç: ',
                         reply_markup=create_inline_buttons(
                             dictionary={'–†—É—Å—Å–∫–∏–π‚úí': 'rus',
                                         '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞': 'math',
                                         '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞': 'inf',
                                         '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ': 'demos'}))

    if call.data in subject_list:
        user_choice = call.message.text    # —Å–æ—Ö—Ä–∞–Ω–∏ –≤ –±–¥ –ø—Ä–µ–¥–º–µ—Ç
        print(user_choice)
        update("subject", user_choice, user_id)
        bot.edit_message_text(chat_id=user_id, message_id=call.message.id,
                              text=f'–¢—ã –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥–º–µ—Ç. '
                                   f'–ï–≥–æ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /new_subject.'
                                   f'–¢–µ–ø–µ—Ä—å –≤ 16:00 —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å'
                                   f' —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')

    if call.data == 'get_task':
        bot.edit_message_text(chat_id=user_id, message_id=call.message.id,
                              text='—Ç—É—Ç –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–∏–µ')


bot.infinity_polling()
